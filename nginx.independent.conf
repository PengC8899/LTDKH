# LTDKH Bot 独立部署 Nginx 配置
# 此配置避免与现有Nginx配置冲突

# 上游服务器配置
upstream ltdkh_app {
    server 127.0.0.1:8013;  # 使用独立端口8013
    keepalive 32;
}

# HTTP服务器配置 - 重定向到HTTPS
server {
    listen 8080;  # 使用独立HTTP端口
    listen [::]:8080;
    server_name _;
    
    # 健康检查端点
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # 重定向到HTTPS（如果配置了域名）
    location / {
        return 301 https://$host:8443$request_uri;
    }
}

# HTTPS服务器配置
server {
    listen 8443 ssl http2;  # 使用独立HTTPS端口
    listen [::]:8443 ssl http2;
    server_name _;
    
    # SSL证书配置（需要手动配置）
    # ssl_certificate /etc/ssl/certs/ltdkh-bot.crt;
    # ssl_certificate_key /etc/ssl/private/ltdkh-bot.key;
    
    # 临时自签名证书配置（仅用于测试）
    ssl_certificate /etc/nginx/ssl/ltdkh-bot-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/ltdkh-bot-selfsigned.key;
    
    # SSL配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # 安全头
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 客户端最大请求体大小
    client_max_body_size 10M;
    
    # 超时配置
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # 健康检查端点
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # 应用健康检查
    location /health {
        proxy_pass http://ltdkh_app/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 健康检查不记录日志
        access_log off;
    }
    
    # 静态文件
    location /static/ {
        proxy_pass http://ltdkh_app/static/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 静态文件缓存
        expires 1d;
        add_header Cache-Control "public, immutable";
    }
    
    # favicon.ico
    location = /favicon.ico {
        proxy_pass http://ltdkh_app/favicon.ico;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        expires 1d;
        access_log off;
    }
    
    # robots.txt
    location = /robots.txt {
        proxy_pass http://ltdkh_app/robots.txt;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        expires 1d;
        access_log off;
    }
    
    # 主应用代理
    location / {
        proxy_pass http://ltdkh_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # WebSocket支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 缓冲配置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # 错误页面
        proxy_intercept_errors on;
        error_page 502 503 504 /50x.html;
    }
    
    # 错误页面
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # 日志配置
    access_log /var/log/nginx/ltdkh-bot-access.log;
    error_log /var/log/nginx/ltdkh-bot-error.log;
}

# 监控端点（仅本地访问）
server {
    listen 127.0.0.1:8081;
    server_name localhost;
    
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
    
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}