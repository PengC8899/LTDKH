version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: ltdkh_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - ltdkh_network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: ltdkh_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: tg_watchdog
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ltdkh_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ltdkh_app
    restart: unless-stopped
    ports:
      - "8012:8012"
    env_file:
      - .env.prod
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - ltdkh_network
    volumes:
      - ./sessions:/app/sessions
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8012/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  ltdkh_network:
    driver: bridge